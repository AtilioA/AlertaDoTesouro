version: '3.9'

services:
  web-dev:
    image: node:lts-alpine
    profiles:
      - dev
    env_file: web/.env
    environment:
      - NODE_ENV=development
      - BACKEND_BASE_URL=http://server-dev:3333
      - REACT_APP_BASE_URL=http://server-dev:3000
    restart: on-failure
    networks:
      - backend
    ports:
      - '${PORT:-3000}:3000'
    volumes:
      - ./web:/app
      - ./.prettierrc.yaml:/.prettierrc.yaml
    working_dir: /app
    command: sh -c 'yarn install && yarn start'

  # web:
  #   image: node:lts-alpine
  #   profiles:
  #     - prod
  #   environment:
  #     - NODE_ENV=production
  #   restart: unless-stopped
  #   ports:
  #     - '80:80'
  #   # TODO transpile and serve

  server-dev:
    image: node:lts-alpine
    profiles:
      - dev
    depends_on:
      - postgres
      - postgres_test
      - redis
    env_file: server/.env
    environment:
      - NODE_ENV=development
      - PORT=3333
    restart: on-failure
    ports:
      - '${PORT:-3333}:3333'
    networks:
      - backend
    volumes:
      - ./server:/app
      - ./.prettierrc.yaml:/.prettierrc.yaml
    working_dir: /app
    command: sh -c 'yarn install && yarn typeorm migration:run && (yarn dev:queue & yarn dev:server)'

  # server:
  #   image: node:lts-alpine
  #   profiles:
  #     - prod
  #   env_file: server/.env
  #   environment:
  #     - NODE_ENV=production
  #     # Treasury bonds database
  #     - DB_TYPE=postgres
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_USERNAME=${DB_USERNAME} # TODO Change to required without breaking dev build
  #     # - DB_USERNAME=${DB_USERNAME?}
  #     - DB_PASSWORD=${DB_PASSWORD} # Change to required without breaking dev build
  #     # - DB_PASSWORD=${DB_PASSWORD?}
  #     - DB_DATABASE=${DB_USERNAME} # Change to required without breaking dev build
  #     # - DB_DATABASE=${DB_USERNAME?}
  #     # JWT secret for password hashing
  #     - JWT_SECRET=${JWT_SECRET} # Change to required without breaking dev build
  #     # - JWT_SECRET=${JWT_SECRET?}
  #     - JWT_EXPIRES_IN="1d"
  #     # Cron schedule for update-all-treasury-bonds task
  #     - UPDATE_CRON=${UPDATE_CRON:-"*/2 * * * *"}
  #     # Cron schedule for check-all-notifications task
  #     - NOTIFICATIONS_CRON=${SEVER_NOTIFICATIONS_CRON:-"*/2 * * * *"}
  #     # Mailing credentials
  #     - MAIL_HOST=${MAIL_HOST:-smtp.mailtrap.io}
  #     - MAIL_PORT=${MAIL_PORT:-465}
  #     - MAIL_USER=${MAIL_USER} # Change to required without breaking dev build
  #     # - MAIL_USER=${MAIL_USER?}
  #     - MAIL_PASSWORD=${MAIL_PASSWORD} # Change to required without breaking dev build
  #     # - MAIL_PASSWORD=${MAIL_PASSWORD?}
  #     - MAIL_SECURE=false # TODO
  #     # Redis config
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - PORT=3333
  #   restart: unless-stopped
  #   ports:
  #     - '${SERVER_PORT:-3333}:3333'
  #   depends_on:
  #     - postgres
  #     - redis
  #   working_dir: /app
  #   # TODO transpile and serve

  postgres:
    image: postgres:alpine
    env_file: server/.env
    networks:
      - backend
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped

  postgres_test:
    image: postgres:alpine
    profiles:
      - test
    env_file: server/.env.test
    networks:
      - backend
    volumes:
      - db-data-test:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:alpine
    networks:
      - backend
    restart: unless-stopped

networks:
  backend:

volumes:
  db-data:
  db-data-test:
